#Partie A

def init(n) :
        l = []
        for n in range(n,0,-1) :
                l.append(n)
        plateau = [[],[],[]]
        plateau[0] = list(l)
        return(plateau)


def nombre_disques(plateau, numtour) :
        return(len(plateau[numtour]))



def disque_superieur(plateau, numtour) :
        if nombre_disques(plateau, numtour)== 0 :
                return(-1)
        else :
                x = nombre_disques(plateau, numtour)
                return(plateau[numtour[x]]

def position_disque(plateau, numdisque) :
        for i in range plateau :
                x = plateau[numdisque]

def verifier_déplacement(plateau, nt1, nt2) :
        if nt2 < disque_superieur :
                return False
        else :
                return True

def verifier_victoire(plateau, n) :
        for n in range plateau :
                if plateau[3] == [3, 2, 1] :
                        return True
                else :
                        return False
        
#Partie C
def lire_coords(plateau):
    départ = int(input("Choisir tour de départ compris entre 0 et 2 : "))
    while (0 > départ or 2 < départ) and (plateau[départ] != []) and (départ != -1):
        départ = int(input("Choisir une autre tour svp : "))
    arrivée = int(input("Choisir tour d'arrivée compris entre 0 et 2 : "))
    while (0 > arrivée or 2 < arrivée) and (plateau[départ][len(plateau[départ])-1] < plateau[arrivée][len(plateau[arrivée])-1]) and (arrivée != -1):
        arrivée = int(input("Choisir tour d'arrivée compris entre 0 et 2 : "))
    if départ == -1 or arrivée == -1 :
        return None
    else :
        return départ, arrivée
    
        
def jouer_un_coup(plateau, n):
    coords = lire_coords(plateau)
    val = plateau[coords[0]][0]
    efface_disque(val, plateau,n)
    plateau[coords[0]].remove(val)
    plateau[coords[1]].append(val)
    dessine_disque(val, plateau, n )
    

def boucle_jeu(plateau,n):
    nb_tour = 0
    max_t = 10
    coup_minimum = (2^n)-1 #Nicolas, à rajouter
    while (verifier_victoire(plateau,n) == False or nb_tour < max_t) and lire_coords != None 
        nb_tour += 1
        jouer_un_coup(plateau,n)
    if verifier_victoire(plateau,n) :
        return nb_tour, verifier_victoire(plateau,n)
        print('Victoire, nombre de coups : ',nb_tour,'nombre de coups minimum avec ',n,' disques : ',coup_minimum)
    elif lire_coords(plateau) == None :
        print('Abandon')
    else :
        return verifier_victoire(plateau,n)
        print('Perdu')


disque = int(input("Combien de disques 'n' souhaité ? "))
coup_minimum = (2^disque)-1
plt = init(disque)  #besoin d'import partie A
#dessine fenetre turtle
boucle_jeu(plt,disque)

#Partie D

def dernier_coup(coups,n):
    

           
    

        
        
    


